[tool.poetry]
name = "djangorestframework-types"
version = "0.7.1"
description = "Type stubs for Django Rest Framework"
authors = ["Steve Dignam <steve@dignam.xyz>"]
repository = "https://github.com/sbdchd/djangorestframework-types"
readme = "README.md"
license = "MIT"
keywords = ["django", "djangorestframework", "types", "mypy", "stubs"]
packages = [
    { include = "rest_framework-stubs" },
    { include = "coreapi-stubs" },
    { include = "coreschema-stubs" },
    { include = "rest_framework_swagger-stubs" },
    { include = "openapi_codec-stubs" },
]

[tool.poetry.dependencies]
python = "^3.7"
typing_extensions = { version = "^4.6", python = "<3.11" }

[tool.poetry.group.dev.dependencies]
ipython = "^7.19"
django-types = "^0.3.1"
django = "^3.1"
flake8 = "^3.8"
flake8-pyi = "^20.10"
mypy = "^1.4"
isort = "5.10.1"
black = "^22.10.0"
types-requests = "^2.28.11"
ruff = "^0.0.261"
pyright = "^1.1.318"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.ruff]
select = [
    "E",
    "F",
    "TID252",
    "I001",
    "T20",
    "C4",
    "UP",
    "N",
    "BLE",
    "B",
    "RET",
    "SIM",
    "ARG",
    "DTZ",
    "ERA",
    "RUF",
]
ignore = [
    "E501",   # line length is handled by black
    "ARG001", # pytest fixtures mess with this
    "ARG002", # sometimes parent classes require params
    "N806",   # django migrations violate this a lot
    "B008",   # type.Argument violates this
    "N815",   # we mix and match casing in serializers
    "ARG005", # monkey patching false positive with *args, and **kwargs
    "N805",   # false positive with pydantic
    "N802",   # DRF serializers mess with this
    "RET505", # if, elif, else are fine with returns
    "RET507", # if, elif, else with continue is also fine
    "RET508", # if, elif, else with break is also fine

    # okay because we're doing hacky things for our runtime tests
    "T201",   # we use print for testing
    "B905",   # allow zip without strict
    "B018",   # useless expressions useful for type checking
    "B904",   # allow bad except clauses
    "N803",   # some APIs have weird names
    "N818",   # some exceptions have bad names
    "N801",   # some class names have bad names
    "ERA001", # false positives
]
unfixable = [
    "ERA001",
] # we want to check ourselves before we delete commented out code.
update-check = false
target-version = "py38"

[tool.ruff.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"


[build-system]
requires = ["poetry-core>=1.1.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
